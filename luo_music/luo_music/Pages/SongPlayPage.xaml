<common:NavigableUserControl
    xmlns:common="using:LuoMusic.Common"
    x:Class="LuoMusic.Pages.SongPlayPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:LuoMusic.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:dataviewmodel="using:LuoMusic.ViewModel.DataViewModel"
    xmlns:uc="using:LuoMusic.Pages.UC"
    xmlns:cu="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,5)"
    xmlns:fcu="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,5)"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:core="using:Windows.UI.Xaml"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    mc:Ignorable="d"
    d:DesignHeight="400"
    d:DesignWidth="700"
    Background="{x:Null}"
    DataContext="{Binding Main, Source={StaticResource Locator}}">

    <UserControl.Resources>
        <ResourceDictionary>
            <Style TargetType="ListViewItem" x:Key="LyricListItem">
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
                <Setter Property="IsHoldingEnabled" Value="True" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
                <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
                <Setter Property="AllowDrop" Value="False" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <ListViewItemPresenter ContentTransitions="{TemplateBinding ContentTransitions}"
                        x:Name="Root" HorizontalAlignment="Stretch"
                        Control.IsTemplateFocusTarget="True"
                        FocusVisualMargin="0" Margin="0" Background="{x:Null}"
                        FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                        FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                        FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                        FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                        SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}"
                        CheckBrush="{x:Null}"
                        CheckBoxBrush="{x:Null}"
                        DragBackground="{x:Null}"
                        DragForeground="{ThemeResource ListViewItemDragForeground}"
                        FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                        FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                        PlaceholderBackground="{x:Null}"
                        PointerOverBackground="{x:Null}"
                        PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                        SelectedBackground="{x:Null}"
                        SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                        SelectedPointerOverBackground="{x:Null}"
                        PressedBackground="{x:Null}"
                        SelectedPressedBackground="{x:Null}"
                        DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                        DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                        ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        ContentMargin="{TemplateBinding Padding}"
                        CheckMode="{ThemeResource ListViewItemCheckMode}">
                            </ListViewItemPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="LyricListView" TargetType="ListView">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="TabNavigation" Value="Once"/>
                <Setter Property="IsSwipeEnabled" Value="True"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
                <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
                <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="True"/>
                <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled"/>
                <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False"/>
                <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
                <Setter Property="UseSystemFocusVisuals" Value="True"/>
                <Setter Property="ItemContainerTransitions">
                    <Setter.Value>
                        <TransitionCollection>
                            <AddDeleteThemeTransition/>
                            <ContentThemeTransition/>
                            <ReorderThemeTransition/>
                            <EntranceThemeTransition IsStaggeringEnabled="False"/>
                            <RepositionThemeTransition IsStaggeringEnabled="False"/>
                        </TransitionCollection>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer x:Name="ScrollViewer" AutomationProperties.AccessibilityView="Raw" 
                                      BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" 
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="Disabled">
                                    <ItemsPresenter Footer="{TemplateBinding Footer}" FooterTransitions="{TemplateBinding FooterTransitions}" FooterTemplate="{TemplateBinding FooterTemplate}" Header="{TemplateBinding Header}" HeaderTransitions="{TemplateBinding HeaderTransitions}" HeaderTemplate="{TemplateBinding HeaderTemplate}" Padding="{TemplateBinding Padding}"/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <common:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid cu:Background="{ThemeResource SystemChromeMediumLowColor}"
          fcu:Background="{ThemeResource SystemControlChromeLowAcrylicWindowBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Wide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="750"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SongPanel.Visibility" Value="Visible"/>
                        <Setter Target="SongPanel.(Grid.Column)" Value="0"/>
                        <Setter Target="SongPanel.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="LrcGrid.Visibility" Value="Visible"/>
                        <Setter Target="LrcGrid.(Grid.Column)" Value="1"/>
                        <Setter Target="LrcGrid.(Grid.ColumnSpan)" Value="1"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Narrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SongPanel.Visibility" Value="Visible"/>
                        <Setter Target="SongPanel.(Grid.Column)" Value="0"/>
                        <Setter Target="SongPanel.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="LrcGrid.Visibility" Value="Collapsed"/>
                        <Setter Target="LrcGrid.(Grid.ColumnSpan)" Value="0"/>
                        <Setter Target="LrcGrid.(Grid.ColumnSpan)" Value="2"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <RelativePanel Name="SongPanel" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10">
            <Grid x:Name="LeftSide" RelativePanel.AlignHorizontalCenterWithPanel="True" Margin="0,0,0,0" Tapped="DropShadowPanel_Tapped">
                <Image x:Name="RotatingImage" Width="225" Height="225" Margin="100,0,0,0" 
                VerticalAlignment="Center" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5"
                Stretch="UniformToFill" Source="/Assets/CD.png">
                    <Image.RenderTransform>
                        <CompositeTransform x:Name="ImageCompositeTransform" />
                    </Image.RenderTransform>
                </Image>
                <controls:DropShadowPanel Style="{StaticResource DropShadowStyle}">
                    <Grid CornerRadius="5" Width="240" Height="240" HorizontalAlignment="Left" Margin="0,0,0,0" >
                        <Image x:Name="Artwork" Width="240" Height="240" VerticalAlignment="Center"
                            Stretch="UniformToFill" Source="{Binding CurrentSong.AlbumImage, Mode=OneWay, FallbackValue='/Assets/DefaultCover.png'}" HorizontalAlignment="Stretch"/>
                    </Grid>
                </controls:DropShadowPanel>

            </Grid>
            <Border x:Name="Vol" RelativePanel.AlignLeftWith="LeftSide" RelativePanel.Below="LeftSide"  
                    Margin="0,18,0,5" CornerRadius="10" Tapped="Vol_Tapped">
                <Grid>
                    <Border  Background="DarkGray" Opacity="0.3"/>
                    <TextBlock Text="{Binding CurrentPlayVol.Vol.VolNum,Converter={StaticResource StringFormatConverter},ConverterParameter='VOL.{0:N0}',FallbackValue='Vol.1037'}" 
                       FontSize="16" Margin="8,0,8,0"/>
                </Grid>
            </Border>
            <TextBlock x:Name="SongTitle" Text="{Binding CurrentSong.Name, Mode=OneWay, FallbackValue='落网'}" 
                       FontWeight="ExtraBold" FontSize="18"
                       RelativePanel.AlignLeftWith="LeftSide" RelativePanel.Below="Vol" Margin="0,5,0,5"/>
            <StackPanel RelativePanel.AlignLeftWith="LeftSide" RelativePanel.Below="SongTitle" Margin="0,5,0,0"
                        Orientation="Horizontal">
                <TextBlock Text="{Binding CurrentSong.Artist}" FontSize="14" Opacity="0.8"/>
                <TextBlock Text="/" FontSize="14" Margin="5,0,5,0" />
                <TextBlock Text="{Binding CurrentSong.Album}" FontSize="14" Opacity="0.8"/>
            </StackPanel>
        </RelativePanel>
        <Grid Name="LrcGrid" Tapped="LrcGrid_Tapped">
            <ListView x:Name="LrcView" 
                  Style="{ThemeResource LyricListView}" IsItemClickEnabled="False"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,90,10,90"
                  IsSynchronizedWithCurrentItem="False" SelectionChanged="LrcView_SelectionChanged"
                  SelectedIndex="{Binding LyricVM.CurrentIndex,Mode=OneWay}"
                  ItemContainerStyle="{ThemeResource LyricListItem}" ItemsSource="{Binding LyricVM.Contents,Mode=OneWay}">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="dataviewmodel:LrcContent">
                        <uc:LyricItemTemplate Data="{x:Bind }"/>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Grid x:Name="LrcHeaderGrid" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding LyricVM.HasLyric,Converter={StaticResource BoolNottoVisibilityConverter},Mode=OneWay}">
                <TextBlock FontSize="18" x:Name="LrcHeader" Text="暂无歌词"
                               Style="{ThemeResource SubtitleTextBlockStyle}" />
            </Grid>
        </Grid>

    </Grid>
</common:NavigableUserControl>
